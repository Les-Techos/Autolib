
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div id="map">
    <!-- Ici s'affichera la carte -->
</div>
<script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
<script type='text/javascript' src='https://unpkg.com/leaflet.markercluster@1.3.0/dist/leaflet.markercluster.js'></script>
<script type="text/javascript">
    // On initialise la latitude et la longitude de Paris (centre de la carte)
    var lat = 48.852969;
    var lon = 2.349903;
    var macarte = null;
    var stations = [];
    var markerClusters; // Servira à stocker les groupes de marqueurs
    // Nous initialisons une liste de marqueurs

    // Fonction d'initialisation de la carte
    function initMap() {
		var markers = []; // Nous initialisons la liste des marqueurs
		// Nous définissons le dossier qui contiendra les marqueurs
		@if (Model != null)
{
    @foreach (var st in Model)
    {
		@:var element = {};
		@:element.id = "ID : @st.IdStation";
		@:element.Adresse = "Adresse : @st.Adresse";
		@:element.Numero = "Numéro : @st.Numero";
		@:element.Ville = "Ville : @st.Ville";
		@: element.CodePostal = "Code Postal : @st.CodePostal";
		@:element.lat = @double.Parse(@st.Latitude.ToString(), new System.Globalization.CultureInfo("en-US")) /1000000;
		@:element.lon = @double.Parse(@st.Longitude.ToString(), new System.Globalization.CultureInfo("en-US")) /1000000;
        @:stations.push(element );

	}
}
		var iconBase = 'http://localhost/carte/icons/';
		// Créer l'objet "macarte" et l'insèrer dans l'élément HTML qui a l'ID "map"
		macarte = L.map('map').setView([lat, lon], 11);
		markerClusters = L.markerClusterGroup(); // Nous initialisons les groupes de marqueurs
		// Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
		L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
			// Il est toujours bien de laisser le lien vers la source des données
			attribution: 'données © OpenStreetMap/ODbL - rendu OSM France',
			minZoom: 1,
			maxZoom: 20
		}).addTo(macarte);
		// Nous parcourons la liste des villes
        for (station in stations) {

			var marker = L.marker([stations[station].lat, stations[station].lon]); // pas de addTo(macarte), l'affichage sera géré par la bibliothèque des clusters
            var popup = L.popup().setContent(stations[station].id + "<br/>" + stations[station].Adresse + "<br/>" + stations[station].Numero + "<br/>" + stations[station].Ville + "<br/>" + stations[station].CodePostal );
			marker.bindPopup(popup);
			markerClusters.addLayer(marker); // Nous ajoutons le marqueur aux groupes
			markers.push(marker); // Nous ajoutons le marqueur à la liste des marqueurs
		}
		var group = new L.featureGroup(markers); // Nous créons le groupe des marqueurs pour adapter le zoom
		macarte.fitBounds(group.getBounds().pad(0.5)); // Nous demandons à ce que tous les marqueurs soient visibles, et ajoutons un padding (pad(0.5)) pour que les marqueurs ne soient pas coupés
		macarte.addLayer(markerClusters);
	}
              window.onload = function () {


                  // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
                  initMap();
              };
</script>
